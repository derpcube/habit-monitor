// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
  habits   Habit[]
}

model Habit {
  id          String   @id @default(cuid())
  title       String
  description String?
  color       String   @default("#3B82F6")
  category    String   @default("General")
  frequency   String   @default("daily") // daily, weekly, monthly
  target      Int      @default(1) // target completions per frequency period
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String

  user    User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  entries HabitEntry[]

  @@index([userId])
}

model HabitEntry {
  id        String   @id @default(cuid())
  date      DateTime @default(now())
  completed Boolean  @default(true)
  value     Int      @default(1) // for habits that can be completed multiple times
  notes     String?
  habitId   String

  habit Habit @relation(fields: [habitId], references: [id], onDelete: Cascade)

  @@unique([habitId, date])
  @@index([habitId])
} 